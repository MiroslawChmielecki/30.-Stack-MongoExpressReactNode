{"version":3,"sources":["config.js","redux/postsRedux.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","utils/cutText/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","App.js","index.js"],"names":["API_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","LOAD_POSTS","LOAD_SINGLE_POST","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","startRequest","type","endRequest","errorRequest","error","resetRequest","loadPostsByPage","payload","initialState","data","singlePost","presentPage","pending","success","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","author","content","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","changePage","newPage","onPageChange","setState","initialPage","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","defaultProps","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","counter","PostsPage","PostsCounterContainer","ContactPage","NotFoundPage","SinglePost","loadPost","appId","href","faFacebookSquare","loadSinglePostRequest","SinglePostPage","SinglePostContainer","match","params","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","App","exact","component","Home","Contact","AddPost","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.676b4e1f.chunk.js","sourcesContent":["export const API_URL = \"http://localhost:8000/api\";\r\nexport const BASE_URL = \"http://localhost:3000/\";\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\n\r\n/* SELECTORS */\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCounter = ({ posts }) => posts.data.length;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getPages = ({ posts }) =>\r\n  Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getPresentPage = ({ posts }) => posts.presentPage;\r\n\r\n// action name creator\r\nconst reducerName = \"posts\";\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* ACTIONS */\r\nexport const LOAD_POSTS = createActionName(\"LOAD_POSTS\");\r\nexport const LOAD_SINGLE_POST = createActionName(\"LOAD_SINGLE_POST\");\r\nexport const START_REQUEST = createActionName(\"START_REQUEST\");\r\nexport const END_REQUEST = createActionName(\"END_REQUEST\");\r\nexport const ERROR_REQUEST = createActionName(\"ERROR_REQUEST\");\r\nexport const RESET_REQUEST = createActionName(\"RESET_REQUEST\");\r\nexport const LOAD_POSTS_PAGE = createActionName(\"LOAD_POSTS_PAGE\");\r\n\r\n//Action Creators\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  singlePost: {},\r\n  amount: 0,\r\n  postsPerPage: 10,\r\n  presentPage: 1,\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null\r\n  }\r\n};\r\n\r\n/* THUNKS */\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = id => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPostRequest = post => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.post(`${API_URL}/posts`, post);\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload };\r\n    case START_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: true, error: null, success: null }\r\n      };\r\n    case END_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: true }\r\n      };\r\n    case ERROR_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: action.error, success: false }\r\n      };\r\n    case RESET_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: null }\r\n      };\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts]\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//import reducers\r\nimport posts from \"./postsRedux\";\r\n\r\n//combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts\r\n});\r\n\r\n//create store\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from \"react\";\r\nimport Logo from \"../../common/Logo/Logo\";\r\nimport MainMenu from \"../../layout/MainMenu/MainMenu\";\r\nimport \"./NavBar.scss\";\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    links: [\r\n      { path: \"/\", title: \"Home\" },\r\n      { path: \"/posts/new\", title: \"Add post\" },\r\n      { path: \"/posts\", title: \"Posts\" },\r\n      { path: \"/contact\", title: \"Contact\" }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport PageContainer from \"../PageContainer/PageContainer\";\r\nimport NavBar from \"../../features/NavBar/NavBar\";\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default HtmlBox;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./PostSummary.scss\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport SmallTitle from \"../../common/SmallTitle/SmallTitle\";\r\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\r\nimport cutText from \"../../../utils/cutText/cutText\";\r\n\r\nconst PostSummary = ({ id, title, author, content }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n    <Button variant=\"primary\">\r\n      <Link to={`/posts/${id}`}>Read more</Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  content: PropTypes.string\r\n};\r\n\r\nexport default PostSummary;\r\n","export default (content, maxLength) => {\r\n  if (content.length < 1) return \"Error\";\r\n  if (content.length <= maxLength) return content;\r\n  return content.substr(0, content.lastIndexOf(\" \", maxLength)) + \"...\";\r\n};\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport PostSummary from \"../PostSummary/PostSummary\";\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <section className=\"posts-list\">\r\n    {posts.map(post => (\r\n      <PostSummary key={post.id} {...post} />\r\n    ))}\r\n  </section>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default PostsList;\r\n","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      presentPage: this.props.initialPage || 1\r\n    };\r\n  }\r\n\r\n  changePage = newPage => {\r\n    const { onPageChange } = this.props;\r\n\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  };\r\n  render() {\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        <ul className=\"pagination__list\">\r\n          {presentPage > 1 ? (\r\n            <li\r\n              className=\"pagination__list__item\"\r\n              onClick={() => changePage(presentPage - 1)}\r\n            >\r\n              &lt;\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {[...Array(pages)].map((el, page) => (\r\n            <li\r\n              key={++page}\r\n              onClick={() => {\r\n                changePage(page);\r\n              }}\r\n              className={`pagination__list__item${\r\n                page === presentPage ? \" pagination__list__item--active\" : \"\"\r\n              }`}\r\n            >\r\n              {page}\r\n            </li>\r\n          ))}\r\n          {presentPage === pages && pages !== 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <li\r\n              className=\"pagination__list__item\"\r\n              onClick={() => changePage(presentPage + 1)}\r\n            >\r\n              &gt;\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport PostsList from \"../PostsList/PostsList\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\n\r\nclass Posts extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n\r\n    loadPostsByPage(initialPage || 1, postsPerPage || 10);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  loadPostsPage = page => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage);\r\n  };\r\n\r\n  render() {\r\n    const { posts, request, pages, pagination, presentPage } = this.props;\r\n    const { pending, success, error } = request;\r\n    const { loadPostsPage } = this;\r\n\r\n    if (\r\n      pending === false &&\r\n      success === true &&\r\n      posts.length > 0 &&\r\n      pagination === true\r\n    )\r\n      return (\r\n        <div>\r\n          <PostsList posts={posts} />\r\n          <Pagination\r\n            pages={pages}\r\n            onPageChange={loadPostsPage}\r\n            initialPage={presentPage}\r\n          />\r\n        </div>\r\n      );\r\n    else if (\r\n      pending === false &&\r\n      success === true &&\r\n      posts.length > 0 &&\r\n      pagination === false\r\n    )\r\n      return (\r\n        <>\r\n          <PostsList posts={posts} />\r\n        </>\r\n      );\r\n    else if (pending === true || success === null) return <Spinner />;\r\n    else if (pending === false && error !== null)\r\n      return <Alert variant=\"error\">{error}</Alert>;\r\n    else if (pending === false && success === true && posts.length === 0)\r\n      return <Alert variant=\"info\">No posts</Alert>;\r\n    else {\r\n      return <Alert variant=\"info\">Something went wrong....</Alert>;\r\n    }\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired\r\n};\r\n\r\nPosts.defaultProps = {\r\n  initialPage: 1,\r\n  postsPerPage: 10,\r\n  pagination: true\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getPosts,\r\n  getRequest,\r\n  loadPostsByPageRequest,\r\n  resetRequest,\r\n  getPages,\r\n  getPresentPage\r\n} from \"../../../redux/postsRedux\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: getPresentPage(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) =>\r\n    dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Posts);\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport Posts from \"../../features/Posts/PostsContainer\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <PageTitle>Blog</PageTitle>\r\n    <Posts pagination={false} postsPerPage={3} />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass PostsCounter extends React.Component {\r\n  render() {\r\n    const { counter } = this.props;\r\n\r\n    return <div>{counter > 0 ? `Posts amount: ${counter}` : \"No posts\"}</div>;\r\n  }\r\n}\r\n\r\nPostsCounter.propTypes = {\r\n  counter: PropTypes.number.isRequired\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { connect } from \"react-redux\";\r\nimport { getPostsCounter } from \"../../../redux/postsRedux\";\r\nimport PostsCounter from \"./PostsCounter\";\r\n\r\nconst mapStateToProps = state => ({\r\n  counter: getPostsCounter(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport Posts from \"../../features/Posts/PostsContainer\";\r\nimport PostsCounterContainer from \"../../features/PostsCounter/PostsCounterContainer\";\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounterContainer />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Contact</PageTitle>\r\n    <p>Your Favourite Blooger Ltd.</p>\r\n    <p>9432 Division Street</p>\r\n    <p>Stone Mountain, GA 30083</p>\r\n    <p>Mobile Number: 207-914-3411</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\r\nimport SmallTitle from \"../../common/SmallTitle/SmallTitle\";\r\nimport { BASE_URL } from \"../../../config\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { FacebookProvider, Comments, ShareButton } from \"react-facebook\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFacebookSquare } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport \"./SinglePost.css\";\r\n\r\nclass SinglePost extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPost, id, resetRequest } = this.props;\r\n    loadPost(id);\r\n    resetRequest();\r\n  }\r\n\r\n  render() {\r\n    const { request, post, location } = this.props;\r\n    const { pending, success, error } = request;\r\n\r\n    if (pending === false && success === true && post !== null) {\r\n      return (\r\n        <article>\r\n          <SmallTitle>{post.title}</SmallTitle>\r\n          <FacebookProvider appId=\"603320293534637\">\r\n            <ShareButton\r\n              className=\"facebook-share-button\"\r\n              href={`${BASE_URL}/${location.pathname}`}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faFacebookSquare}\r\n                className=\"facebook-icon\"\r\n              />\r\n              Share on facebook\r\n            </ShareButton>\r\n          </FacebookProvider>\r\n          <p>Author: {post.author}</p>\r\n          <HtmlBox>{post.content}</HtmlBox>\r\n          <FacebookProvider appId=\"603320293534637\">\r\n            <Comments href={`${BASE_URL}${location.pathname}`} />\r\n          </FacebookProvider>\r\n        </article>\r\n      );\r\n    } else if (pending === true || success === null) {\r\n      return <Spinner />;\r\n    } else if (pending === false && error !== null) {\r\n      return <Alert variant=\"error\">{error}</Alert>;\r\n    } else if (pending === false && success === true && post === null) {\r\n      return <Alert variant=\"info\">No posts</Alert>;\r\n    } else {\r\n      return <Alert variant=\"info\">Something went wrong!</Alert>;\r\n    }\r\n  }\r\n}\r\n\r\nSinglePost.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  loadPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props} />);\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getSinglePost,\r\n  getRequest,\r\n  loadSinglePostRequest,\r\n  resetRequest\r\n} from \"../../../redux/postsRedux\";\r\nimport SinglePost from \"./SinglePost\";\r\n\r\nconst mapStateToProps = state => ({\r\n  post: getSinglePost(state),\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPost: id => dispatch(loadSinglePostRequest(id)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SinglePost);\r\n","import React from \"react\";\r\nimport SinglePostContainer from \"../../features/SinglePost/SinglePostContainer\";\r\n\r\nconst SinglePostPage = props => (\r\n  <SinglePostContainer id={props.match.params.id} />\r\n);\r\n\r\nexport default SinglePostPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Editor from \"react-medium-editor\";\r\nimport \"medium-editor/dist/css/medium-editor.css\";\r\nimport \"medium-editor/dist/css/themes/default.css\";\r\n\r\nimport TextField from \"../../common/TextField/TextField\";\r\nimport SectionTitle from \"../../common/SectionTitle/SectionTitle\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\n\r\nimport \"./PostForm.scss\";\r\n\r\nclass PostForm extends React.Component {\r\n  state = {\r\n    post: {\r\n      title: \"\",\r\n      author: \"\",\r\n      content: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n  };\r\n\r\n  handleEditor = text => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text } });\r\n  };\r\n\r\n  addPost = e => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    addPost(post);\r\n  };\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n    const { error, success, pending } = request;\r\n\r\n    if (error) return <Alert variant=\"error\">{error}</Alert>;\r\n    else if (success)\r\n      return <Alert variant=\"success\">Post has been added!</Alert>;\r\n    else if (pending) return <Spinner />;\r\n    else\r\n      return (\r\n        <form onSubmit={addPost}>\r\n          <TextField\r\n            label=\"Title\"\r\n            value={post.title}\r\n            onChange={handleChange}\r\n            name=\"title\"\r\n          />\r\n\r\n          <TextField\r\n            label=\"Author\"\r\n            value={post.author}\r\n            onChange={handleChange}\r\n            name=\"author\"\r\n          />\r\n\r\n          <SectionTitle>Edit post content</SectionTitle>\r\n\r\n          <Editor\r\n            className=\"content-editor\"\r\n            text={post.content}\r\n            onChange={handleEditor}\r\n            options={{\r\n              placeholder: false,\r\n              toolbar: {\r\n                buttons: [\"bold\", \"italic\", \"underline\", \"anchor\", \"h2\", \"h3\"]\r\n              }\r\n            }}\r\n          />\r\n\r\n          <Button variant=\"primary\">Add post</Button>\r\n        </form>\r\n      );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getRequest,\r\n  addPostRequest,\r\n  resetRequest\r\n} from \"../../../redux/postsRedux\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: post => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostForm);\r\n","import React from \"react\";\r\nimport PostForm from \"../../features/PostForm/PostFormContainer\";\r\n\r\nconst AddPostPage = () => <PostForm />;\r\n\r\nexport default AddPostPage;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport MainLayout from \"./components/layout/MainLayout/MainLayout\";\n\n//import routes\nimport Home from \"./components/pages/Home/HomePage\";\nimport Posts from \"./components/pages/Posts/PostsPage\";\nimport Contact from \"./components/pages/Contact/ContactPage\";\nimport NotFound from \"./components/pages/NotFound/NotFoundPage\";\nimport SinglePost from \"./components/pages/SinglePost/SinglePostPage\";\nimport AddPost from \"./components/pages/AddPost/AddPostPage\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/posts\" exact component={Posts} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route path=\"/posts/new\" exact component={AddPost} />\n          <Route path=\"/posts/:id\" exact component={SinglePost} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./styles/global.scss\";\nimport \"animate.css/animate.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}